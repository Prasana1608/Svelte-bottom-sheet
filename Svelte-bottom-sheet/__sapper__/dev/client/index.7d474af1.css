.root.svelte-jiu2u4{position:fixed;width:100vw;overflow-x:auto;left:0px;bottom:var(--b, -100%);z-index:7}.root[fullscreen=true].svelte-jiu2u4{height:100%}.root[smooth=true].svelte-jiu2u4{transition:bottom calc(var(--f, 1) * var(--s, 0s)) ease-in-out}.backdrop.svelte-jiu2u4{pointer-events:none;position:fixed;left:0px;top:0px;width:100vw;height:100%;background-color:#212121;opacity:var(--o, 0);z-index:6}.backdrop[smooth=true].svelte-jiu2u4{transition:opacity calc(var(--f, 1) * var(--s, 0s)) ease-in-out}.backdrop[open=true].svelte-jiu2u4{pointer-events:all}
.green.svelte-17uedqz{background:linear-gradient(106.64deg, #1BAF0F 0%, #65CD76 34.26%, #2BCF59 70.31%, #36A900 102.49%)}.coin-place.svelte-17uedqz{background-size:132px;background-position:top center;padding:12px 0}.white-sheet.svelte-17uedqz{background-size:100%;background-position:top center}.rounded-b-lg.svelte-17uedqz{border-radius:0 0 8px 8px}.coin-loader.svelte-17uedqz{background:linear-gradient(106.64deg, #979797 0%, #BCBCBC 34.26%, #E0E0E0 70.31%, #848484 102.49%);box-shadow:0px -1px 4px rgba(0, 0, 0, 0.06), 0px 4px 8px rgba(0, 0, 0, 0.16)}.great-para.svelte-17uedqz{animation-name:svelte-17uedqz-mymove;animation-duration:5s;transition:all 5s linear}@keyframes svelte-17uedqz-mymove{0%{opacity:0 }5%{opacity:0;transform:rotateX(180deg)}100%{opacity:1 }}.coin-summary.svelte-17uedqz{animation-name:svelte-17uedqz-mymove2;animation-duration:3.5s;transition:all 3.5s linear}@keyframes svelte-17uedqz-mymove2{0%{display:block;opacity:0;transform:translateY(0%)}5%{display:block;opacity:1;transform:translateY(-50%)}100%{display:none;opacity:1;transform:translateY(-100%)}}.pb-60.svelte-17uedqz{padding-bottom:15rem}.coin-summary.svelte-17uedqz{transform:translateY(-100%);width:91.5%;opacity:1}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */